{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "DefDef",
  "patterns": [
    {
      "include": "#ts-embed"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#attribute"
    },
    {
      "include": "#using-declarations"
    },
    {
      "include": "#rules"
    }
  ],
  "repository": {
    "ts-embed": {
      "begin": "(#)\\s*(ts)\\s*\\n",
      "end": "(#)\\s*(endts)\\s*\\n",
      "name": "meta.embedded.typescript",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor.embedded.typescript.begin.defdef"
        },
        "1": {
          "name": "punctuation.preprocessor.hash.defdef"
        },
        "2": {
          "name": "meta.preprocessor.embed.begin.defdef"
        }
      },
      "endCaptures": {
        "0": {
          "name": "meta.preprocessor.embedded.typescript.end.defdef"
        },
        "1": {
          "name": "punctuation.preprocessor.hash.defdef"
        },
        "2": {
          "name": "meta.preprocessor.embed.end.defdef"
        }
      },
      "patterns": [
        {
          "include": "source.ts"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "(//).*$\\n?",
          "name": "comment.line.double-slash.defdef",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.defdef"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.defdef",
          "match": "\\b(define|using)\\b"
        },
        {
          "name": "keyword.other.defdef",
          "match": "\\b(with)\\b"
        }
      ]
    },
    "using-declarations": {
      "match": "\\b(using)\\s+([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*(;)?",
      "captures": {
        "1": {
          "name": "keyword.control.using.defdef"
        },
        "2": {
          "name": "entity.name.tag.category.defdef"
        },
        "3": {
          "name": "punctuation.declaration.comma.defdef"
        }
      }
    },
    "rules": {
      "patterns": [
        {
          "include": "#keywords"
        },
        {
          "include": "#call-forms"
        },
        {
          "include": "#objects"
        },
        {
          "include": "#method-name"
        },
        {
          "include": "#type-annotations"
        },
        {
          "include": "#identifiers"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#numbers"
        }
      ]
    },
    "call-forms": {
      "begin": "([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*(\\()",
      "end": "\\)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.defdef"
        },
        "2": {
          "name": "punctuation.definition.parameters.begin.defdef"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.end.defdef"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#identifiers"
        },
        {
          "include": "#type-annotations"
        },
        {
          "include": "#punctuation-comma"
        }
      ]
    },
    "type-annotations": {
      "match": "(:)\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)",
      "captures": {
        "1": {
          "name": "punctuation.separator.type-annotation.defdef"
        },
        "2": {
          "name": "entity.name.type.defdef"
        }
      }
    },
    "objects": {
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "match": "\\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*(:)",
          "captures": {
            "1": {
              "name": "variable.object.property.defdef"
            },
            "2": {
              "name": "punctuation.separator.key-value.defdef"
            }
          }
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#punctuation-comma"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.defdef",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.defdef",
          "match": "\\\\."
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.integer.defdef",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.numeric.float.defdef",
          "match": "\\b\\d+\\.\\d+\\b"
        }
      ]
    },
    "identifiers": {
      "match": "\\b([a-zA-Z_][a-zA-Z_0-9]*)\\b",
      "name": "variable.other.defdef"
    },
    "attribute": {
      "begin": "\\[\\[",
      "end": "\\]\\]",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.attribute.begin.defdef"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.section.attribute.end.defde"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#punctuation-comma"
        },
        {
          "match": "\\b([a-zA-Z_][a-zA-Z_$0-9]*)\\s*(=)",
          "captures": {
            "1": {
              "name": "entity.other.attribute.name.defdef"
            },
            "2": {
              "name": "punctuation.separator.attribute.defdef"
            }
          }
        }
      ]
    },
    "punctuation-comma": {
      "match": ",",
      "name": "punctuation.separator.comma.defdef"
    },
    "method-name": {
      "match": "(=>)\\s*([a-zA-Z][a-zA-Z0-9]*)",
      "captures": {
        "1": {
          "name": "punctuation.separator.arrow.defdef"
        },
        "2": {
          "name": "entity.name.tag.methodName.defdef"
        }
      }
    }
  },
  "scopeName": "source.defdef"
}
